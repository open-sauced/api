openapi: 3.0.0
paths:
  /v1/auth/session:
    get:
      operationId: checkAuthSession
      summary: Get authenticated session information
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupabaseAuthDto"
      tags:
        &a1
        - Authentication service
      security:
        - bearer: []
  /v1/auth/onboarding:
    post:
      operationId: postOnboarding
      summary: Updates onboarding information for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserOnboardingDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupabaseAuthDto"
        "201":
          description: ""
        "404":
          description: Unable to update onboarding information for the user
      tags: *a1
      security:
        - bearer: []
  /v1/auth/waitlist:
    post:
      operationId: postWaitlist
      summary: Updates waitlist information for user
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupabaseAuthDto"
        "201":
          description: ""
        "404":
          description: Unable to update waitlist information for the user
      tags: *a1
      security:
        - bearer: []
  /v1/auth/checkout/session:
    post:
      operationId: postCreateCheckoutSession
      summary: Creates a new checkout session for the user
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupabaseAuthDto"
        "201":
          description: ""
        "404":
          description: Unable to create checkout session
      tags: *a1
      security:
        - bearer: []
  /v1/auth/profile:
    patch:
      operationId: updateProfileForUser
      summary: Updates the profile for the authenticated user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUser"
        "404":
          description: Unable to update user profile
      tags: *a1
      security:
        - bearer: []
  /v1/auth/profile/interests:
    patch:
      operationId: updateInterestsForUserProfile
      summary: Updates the interests for the authenticated user profile
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserProfileInterestsDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUser"
        "404":
          description: Unable to update interests for the user profile
      tags: *a1
      security:
        - bearer: []
  /v1/auth/profile/email:
    patch:
      operationId: updateEmailPreferencesForUserProfile
      summary: Updates the email preferences for the authenticated user profile
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserEmailPreferencesDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUser"
        "404":
          description: Unable to update email preferences for the user profile
      tags: *a1
      security:
        - bearer: []
  /v1/auth/profile/coupon:
    patch:
      operationId: applyCouponForUser
      summary: Applies a coupon for the authenticated user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplyUserCouponDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUser"
        "404":
          description: Unable to apply coupon for the user profile
      tags: *a1
      security:
        - bearer: []
  "/v1/users/{username}":
    get:
      operationId: findOneUserByUserame
      summary: Finds a user by :username
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUser"
        "404":
          description: User not found
      tags:
        &a2
        - User service
  "/v1/users/{username}/prs":
    get:
      operationId: findContributorPullRequests
      summary: Finds pull requests by :username
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbPullRequest"
        "404":
          description: User not found
      tags: *a2
  "/v1/users/{username}/highlights":
    get:
      operationId: findAllHighlightsByUsername
      summary: Listing all Highlights for a user and paginate them
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbUserHighlight"
        "404":
          description: Highlights not found
      tags: *a2
  "/v1/users/{username}/top-repos":
    get:
      operationId: findAllTopReposByUsername
      summary: Listing all Top Repos for a user and paginate them
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbRepo"
        "404":
          description: Top repos not found
      tags: *a2
  /v1/users/top:
    get:
      operationId: getTop10Highlights
      summary: List top users
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: userId
          required: false
          in: query
          description: User ID to filter followings from the list
          schema:
            default: 0
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbTopUser"
      tags: *a2
  /v1/users/search:
    get:
      operationId: getUsersByFilter
      summary: Search users
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: username
          required: true
          in: query
          description: Username search query to filter from the list of users
          schema:
            default: ""
            type: string
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbFilteredUser"
        "400":
          description: Username is required
      tags: *a2
  /v1/user/highlights:
    post:
      operationId: addHighlightForUser
      summary: Adds a new highlight for the authenticated user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserHighlightDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OmitTypeClass"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserHighlight"
        "400":
          description: Invalid request
        "404":
          description: Unable to add user highlight
      tags:
        &a3
        - User Highlights service
      security:
        - bearer: []
  "/v1/user/highlights/{id}":
    get:
      operationId: getUserHighlight
      summary: Retrieves a highlight
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserHighlight"
        "400":
          description: Invalid request
        "404":
          description: Unable to get user highlight
      tags: *a3
    patch:
      operationId: updateHighlightForUser
      summary: Updates the highlight for the authenticated user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserHighlightDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserHighlight"
        "400":
          description: Invalid request
        "404":
          description: Unable to update user highlight
      tags: *a3
      security:
        - bearer: []
    delete:
      operationId: deleteHighlightForUser
      summary: Deletes the highlight for the authenticated user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
        "400":
          description: Invalid request
        "404":
          description: Unable to delete user highlight
      tags: *a3
      security:
        - bearer: []
  "/v1/user/highlights/{id}/reactions":
    get:
      operationId: getAllHighlightUserReactions
      summary: Retrieves a highlight reactions for the authenticated user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserHighlightReactionResponse"
        "400":
          description: Invalid request
        "404":
          description: Unable to get user highlight reactions
      tags: *a3
      security:
        - bearer: []
  "/v1/user/highlights/{id}/reactions/{emojiId}":
    post:
      operationId: addHighlightReactionForUser
      summary: Adds a new highlight reaction for the authenticated user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - name: emojiId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserHighlightReaction"
        "201":
          description: ""
        "400":
          description: Invalid request
        "404":
          description: Highlight does not exist
        "409":
          description: Unable to add user highlight reaction
      tags: *a3
      security:
        - bearer: []
    delete:
      operationId: deleteHighlightReactionForUser
      summary: Deletes the highlight reaction for the authenticated user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - name: emojiId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Invalid request
        "404":
          description: Unable to delete user highlight reaction
      tags: *a3
      security:
        - bearer: []
  /v1/user/highlights/following:
    get:
      operationId: getFollowingHighlights
      summary: Fetches highlights for users the authenticated user follows
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: repo
          required: false
          in: query
          description: Highlight Repo Filter
          example: open-sauced/insights
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserHighlight"
      tags: *a3
      security:
        - bearer: []
  /v1/user/highlights/following/repos:
    get:
      operationId: getFollowingHighlightRepos
      summary: Fetches highlight repos for users the authenticated user follows
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: repo
          required: false
          in: query
          description: Highlight Repo Filter
          example: open-sauced/insights
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserHighlightRepo"
        "400":
          description: Invalid request
      tags: *a3
      security:
        - bearer: []
  "/v1/users/{username}/follow":
    get:
      operationId: getFollowStatusByUsername
      summary: Checks if the authenticated user follows the provided username
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserToUserFollows"
        "404":
          description: User follow not found
      tags:
        &a4
        - User service
      security:
        - bearer: []
    put:
      operationId: followUserById
      summary: Follows a user by username
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserToUserFollows"
        "404":
          description: User not found
        "409":
          description: You have already followed this user
      tags: *a4
      security:
        - bearer: []
    delete:
      operationId: unfollowUserByUsername
      summary: Unfollows a user by username
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Returns the user follow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserToUserFollows"
        "404":
          description: User not found
        "409":
          description: You are now following this user
      tags: *a4
      security:
        - bearer: []
  /v1/user/notifications:
    get:
      operationId: getUserNotifications
      summary: Retrieves notifications for the authenticated user
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OmitTypeClass"
        "404":
          description: Unable to get user notifications
      tags:
        - User service
      security:
        - bearer: []
  /v1/user/collaborations:
    get:
      operationId: findAllUserCollaborations
      summary: Listing all collaborations for the authenticated user
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbUserCollaboration"
      tags:
        &a5
        - User Collaborations service
      security:
        - bearer: []
    post:
      operationId: addUserCollaboration
      summary: Adds a new collaboration request for the user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserCollaborationDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserCollaboration"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserCollaboration"
        "400":
          description: Invalid request
        "404":
          description: Unable to add user collaboration
        "409":
          description: The requested user is not accepting collaboration requests
      tags: *a5
      security:
        - bearer: []
  "/v1/user/collaborations/{id}":
    patch:
      operationId: updateUserCollaboration
      summary: Updates a user collaboration
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserCollaborationDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserCollaboration"
        "400":
          description: Invalid request
        "404":
          description: Unable to find user collaboration
      tags: *a5
      security:
        - bearer: []
    delete:
      operationId: removeUserCollaborationById
      summary: Removes the user collaboration request
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Invalid request
        "404":
          description: Unable to remove user collaboration
      tags: *a5
      security:
        - bearer: []
  /v1/user/endorsements/created:
    get:
      operationId: findAllUserCreatedEndorsements
      summary: Finds all endorsements created by the authenticated user and paginates
        them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbEndorsement"
      tags:
        &a6
        - Endorsements service
      security:
        - bearer: []
  /v1/user/endorsements/received:
    get:
      operationId: findAllUserReceivedEndorsements
      summary: Finds all endorsements received by the authenticated user and paginates
        them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbEndorsement"
      tags: *a6
      security:
        - bearer: []
  /v1/user/recommendations/repos:
    get:
      operationId: findUserRepoRecommendations
      summary: Listing recommended repos for the authenticated user
      parameters: []
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbRepo"
      tags:
        &a7
        - User Recommendations service
      security:
        - bearer: []
  /v1/user/recommendations/orgs:
    get:
      operationId: findUserOrgsRepoRecommendations
      summary: Listing recommended repos for the authenticated user based on their orgs
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbRepo"
      tags: *a7
      security:
        - bearer: []
  /v1/prs/list:
    get:
      operationId: listAllPullRequests
      summary: Finds all pull requests and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbPullRequest"
      tags:
        &a8
        - Pull Requests service
  /v1/prs/search:
    get:
      operationId: searchAllPullRequests
      summary: Searches pull requests using filters and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/PullRequestOrderFieldsEnum"
        - name: filter
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/InsightFilterFieldsEnum"
        - name: topic
          required: false
          in: query
          example: javascript
          schema:
            type: string
        - name: repo
          required: false
          in: query
          example: open-sauced/insights
          schema:
            type: string
        - name: repoIds
          required: false
          in: query
          schema:
            type: string
        - name: status
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/PullRequestStatusEnum"
        - name: contributor
          required: false
          in: query
          example: bdougie
          schema:
            type: string
        - name: listId
          required: false
          in: query
          example: uuid-v4
          schema:
            type: string
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbPullRequest"
      tags: *a8
  /v1/prs/insights:
    get:
      operationId: getPullRequestInsights
      summary: Find pull request insights over the last 2 months
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: filter
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/InsightFilterFieldsEnum"
        - name: topic
          required: false
          in: query
          schema:
            default: ""
            type: string
        - name: repo
          required: false
          in: query
          example: open-sauced/insights
          schema:
            type: string
        - name: repoIds
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DbPRInsight"
      tags: *a8
  "/v1/prs/{id}/reviews":
    get:
      operationId: getPullRequestReviews
      summary: Find all pull request reviews by pull request ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DbPullRequestReview"
      tags: *a8
  /v1/prs/description/generate:
    post:
      operationId: generatePRDescription
      summary: Generates a PR description based on the provided information
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeneratePullRequestDescriptionDto"
      responses:
        "201":
          description: ""
        "400":
          description: Invalid request
      tags:
        - Pull Requests service
      security:
        - bearer: []
  /v1/prs/suggestion/generate:
    post:
      operationId: generateCodeRefactor
      summary: Generates a refactor suggestion based on the provided code
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateCodeRefactorSuggestionDto"
      responses:
        "201":
          description: ""
        "400":
          description: Invalid request
      tags:
        - Pull Requests service
      security:
        - bearer: []
  /v1/prs/test/generate:
    post:
      operationId: generateCodeTest
      summary: Generates a test for the provided code
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateCodeTestSuggestionDto"
      responses:
        "201":
          description: ""
        "400":
          description: Invalid request
      tags:
        - Pull Requests service
      security:
        - bearer: []
  /v1/prs/explanation/generate:
    post:
      operationId: generateCodeExplanation
      summary: Generates an explanation for the provided code
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateCodeExplanationDto"
      responses:
        "201":
          description: ""
        "400":
          description: Invalid request
      tags:
        - Pull Requests service
      security:
        - bearer: []
  "/v1/repos/{id}":
    get:
      operationId: findOneById
      summary: Finds a repo by :id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepo"
        "404":
          description: Repository not found
      tags:
        &a9
        - Repository service
  "/v1/repos/{owner}/{repo}":
    get:
      operationId: findOneByOwnerAndRepo
      summary: Finds a repo by :owner and :repo
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepo"
        "404":
          description: Repository not found
      tags: *a9
  /v1/repos/list:
    get:
      operationId: findAll
      summary: Finds all repos and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/RepoOrderFieldsEnum"
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbRepo"
      tags: *a9
  /v1/repos/search:
    get:
      operationId: findAllReposWithFilters
      summary: Finds all repos using filters and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/RepoOrderFieldsEnum"
        - name: filter
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/InsightFilterFieldsEnum"
        - name: repo
          required: false
          in: query
          schema:
            type: string
        - name: topic
          required: false
          in: query
          schema:
            default: ""
            type: string
        - name: repoIds
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbRepo"
      tags: *a9
  /v1/health/service:
    get:
      operationId: healthStatusService
      summary: Check the health of Open Sauced service endpoints
      parameters: []
      responses:
        "200":
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      &a10
                      database:
                        &a11
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example: *a10
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        "503":
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example: *a10
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        &a12
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database: *a11
                      redis: *a12
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
      tags:
        &a16
        - Health check service
  /v1/health/web:
    get:
      operationId: healthStatusWeb
      summary: Check the health of Open Sauced web endpoints
      parameters: []
      responses:
        "200":
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      &a13
                      database:
                        &a14
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example: *a13
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        "503":
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example: *a13
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        &a15
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database: *a14
                      redis: *a15
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
      tags: *a16
  /v1/repos/listUserVoted:
    get:
      operationId: findAllUserVoted
      summary: Finds all repos voted by authenticated user and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/RepoOrderFieldsEnum"
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbRepo"
      tags:
        &a17
        - Repository service guarded
        - Vote service
      security:
        - bearer: []
  "/v1/repos/{repoId}/vote":
    get:
      operationId: findOneByRepoId
      summary: Finds a repo by :repoId and returns if authenticated user has voted for
        it
      parameters:
        - name: repoId
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Returns if authenticated user has voted for it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VotedRepoDto"
      tags: *a17
      security:
        - bearer: []
  "/v1/repos/{id}/vote":
    put:
      operationId: voteOneById
      summary: Finds a repo by :id and adds a vote
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Returns the repo vote
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserVotes"
        "404":
          description: Repo or vote not found
        "409":
          description: You have already voted for this repo
      tags: *a17
      security:
        - bearer: []
    delete:
      operationId: downVoteOneById
      summary: Finds a repo by :id and removes existing vote
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Returns the repo vote
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserVotes"
        "404":
          description: Repo or vote not found
        "409":
          description: You have already removed your vote
      tags: *a17
      security:
        - bearer: []
  "/v1/repos/{owner}/{repo}/vote":
    put:
      operationId: voteOneByOwnerAndRepo
      summary: Finds a repo by :owner and :repo and adds a vote
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Returns the repo vote
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserVotes"
        "404":
          description: Repo or vote not found
        "409":
          description: You have already voted for this repo
      tags: *a17
      security:
        - bearer: []
    delete:
      operationId: downVoteOneByOwnerAndRepo
      summary: Finds a repo by :owner and :repo and removes existing vote
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Returns the repo vote
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserVotes"
        "404":
          description: Repo or vote not found
        "409":
          description: You have already removed your vote
      tags: *a17
      security:
        - bearer: []
  /v1/repos/listUserStarred:
    get:
      operationId: findAllUserStarred
      summary: Finds all repos starred by authenticated user and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/RepoOrderFieldsEnum"
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbRepo"
      tags:
        &a18
        - Repository service guarded
        - Star service
      security:
        - bearer: []
  "/v1/repos/{id}/star":
    put:
      operationId: starOneById
      summary: Finds a repo by :id and adds a star
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Returns the repo star
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserStars"
        "404":
          description: Repo or star not found
        "409":
          description: You have already starred this repo
      tags: *a18
      security:
        - bearer: []
    delete:
      operationId: downStarOneById
      summary: Finds a repo by :id and removes existing star
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Returns the repo star
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserStars"
        "404":
          description: Repo or star not found
        "409":
          description: You have already removed your star
      tags: *a18
      security:
        - bearer: []
  "/v1/repos/{owner}/{repo}/star":
    put:
      operationId: starOneByOwnerAndRepo
      summary: Finds a repo by :owner and :repo and adds a star
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Returns the repo star
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserStars"
        "404":
          description: Repo or star not found
        "409":
          description: You have already starred this repo
      tags: *a18
      security:
        - bearer: []
    delete:
      operationId: downStarOneByOwnerAndRepo
      summary: Finds a repo by :owner and :repo and removes existing star
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Returns the repo star
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserStars"
        "404":
          description: Repo or star not found
        "409":
          description: You have already removed your star
      tags: *a18
      security:
        - bearer: []
  /v1/repos/listUserStargazed:
    get:
      operationId: findAllUserStargazed
      summary: Finds all repos followed by authenticated user and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/RepoOrderFieldsEnum"
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbRepo"
      tags:
        &a19
        - Repository service guarded
        - Stargaze service
      security:
        - bearer: []
  "/v1/repos/{id}/stargaze":
    put:
      operationId: stargazeOneById
      summary: Finds a repo by :id and follows
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Returns the repo follow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserStargazers"
        "404":
          description: Repo or follow not found
        "409":
          description: You have already followed this repo
      tags: *a19
      security:
        - bearer: []
    delete:
      operationId: downStargazeOneById
      summary: Finds a repo by :id and unfollows
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Returns the repo follow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserStargazers"
        "404":
          description: Repo or follow not found
        "409":
          description: You have already unfollowed this repo
      tags: *a19
      security:
        - bearer: []
  "/v1/repos/{owner}/{repo}/stargaze":
    put:
      operationId: stargazeOneByOwnerAndRepo
      summary: Finds a repo by :owner and :repo and follows
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Returns the repo follow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserStargazers"
        "404":
          description: Repo or follow not found
        "409":
          description: You have already followed this repo
      tags: *a19
      security:
        - bearer: []
    delete:
      operationId: downStargazeOneByOwnerAndRepo
      summary: Finds a repo by :owner and :repo and unfollows
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Returns the repo follow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserStargazers"
        "404":
          description: Repo or stargaze not found
        "409":
          description: You have already unfollowed this repo
      tags: *a19
      security:
        - bearer: []
  /v1/repos/listUserSubmitted:
    get:
      operationId: findAllUserSubmitted
      summary: Finds all repos submitted by authenticated user and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/RepoOrderFieldsEnum"
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbRepo"
      tags:
        &a20
        - Repository service guarded
        - Submit service
      security:
        - bearer: []
  "/v1/repos/{id}/submit":
    put:
      operationId: submitOneById
      summary: Finds a repo by :id and adds a submission
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Returns the repo submission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserSubmissions"
        "404":
          description: Repo or submission not found
        "409":
          description: You have already submitted this repo
      tags: *a20
      security:
        - bearer: []
    delete:
      operationId: downSubmitOneById
      summary: Finds a repo by :id and removes existing submission
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Returns the repo submission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserSubmissions"
        "404":
          description: Repo or submission not found
        "409":
          description: You have already removed your submission
      tags: *a20
      security:
        - bearer: []
  "/v1/repos/{owner}/{repo}/submit":
    put:
      operationId: submitOneByOwnerAndRepo
      summary: Finds a repo by :owner and :repo and adds a submission
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Returns the repo submission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserSubmissions"
        "404":
          description: Repo or submission not found
        "409":
          description: You have already submitted this repo
      tags: *a20
      security:
        - bearer: []
    delete:
      operationId: downSubmitOneByOwnerAndRepo
      summary: Finds a repo by :owner and :repo and removes existing submission
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Returns the repo submission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoToUserSubmissions"
        "404":
          description: Repo or submission not found
        "409":
          description: You have already removed your submission
      tags: *a20
      security:
        - bearer: []
  "/v1/repos/{id}/contributions":
    get:
      operationId: findAllByRepoId
      summary: Find a repo by :id listing all contributions and paginating them
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/RepoOrderFieldsEnum"
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbContribution"
        "404":
          description: Repo not found
      tags:
        &a21
        - Repository service
        - Contribution service
  "/v1/repos/{owner}/{repo}/contributions":
    get:
      operationId: findAllByOwnerAndRepo
      summary: Finds a repo by :owner and :repo listing all contributions and
        paginating them
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/RepoOrderFieldsEnum"
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbContribution"
        "404":
          description: Repo not found
      tags: *a21
  "/v1/repos/{owner}/{repo}/{login}/contributions":
    get:
      operationId: findAllByOwnerRepoAndContributorLogin
      summary: Finds a repo by :owner and :repo listing all contributions for a given
        :login and paginating them
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
        - name: login
          required: true
          in: path
          schema:
            type: string
        - name: prev_days_start_date
          required: false
          in: query
          description: Previous number of days to go back to start date range
          schema:
            type: integer
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbRepoLoginContributions"
        "404":
          description: Repo not found
      tags: *a21
  "/v1/insights/{id}":
    get:
      operationId: findInsightPageById
      summary: Finds a insight page by :id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbInsight"
        "401":
          description: Not Authorized to view this Insight
        "404":
          description: Insight page not found
      tags:
        &a22
        - Insights service
    delete:
      operationId: removeInsightForUser
      summary: Removes an insight page for the authenticated user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateInsightDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbInsight"
        "400":
          description: Invalid request
        "404":
          description: Unable to remove user insight
      tags: *a22
      security:
        - bearer: []
  /v1/user/insights:
    get:
      operationId: findAllInsightsByUserId
      summary: Listing all insights for a user and paginate them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbInsight"
        "404":
          description: Insights not found
      tags:
        &a23
        - Insights service
      security:
        - bearer: []
    post:
      operationId: addInsightForUser
      summary: Adds a new insight page for the authenticated user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInsightDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbInsight"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbInsight"
        "400":
          description: Invalid request
        "404":
          description: Unable to add user insight
      tags: *a23
      security:
        - bearer: []
  "/v1/user/insights/{id}":
    patch:
      operationId: updateInsightForUser
      summary: Updates an insight page for the authenticated user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateInsightDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbInsight"
        "400":
          description: Invalid request
        "404":
          description: Unable to update user insight
        "422":
          description: Unable to unable insight repos
      tags: *a23
      security:
        - bearer: []
  "/v1/user/insights/{id}/members":
    get:
      operationId: findAllInsightMembers
      summary: Listing all members for an insight and paginate them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbInsightMember"
        "404":
          description: Insight not found
      tags:
        &a24
        - Insights service
      security:
        - bearer: []
    post:
      operationId: addMemberForInsight
      summary: Adds a new member for the insight
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInsightMemberDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbInsightMember"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbInsightMember"
        "400":
          description: Invalid request
        "404":
          description: Unable to add insight member
      tags: *a24
      security:
        - bearer: []
  "/v1/user/insights/{id}/members/{memberId}":
    patch:
      operationId: updateInsightMember
      summary: Updates an insight member information
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - name: memberId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateInsightMemberDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbInsight"
        "400":
          description: Invalid request
        "404":
          description: Unable to find insight member
        "422":
          description: Unable to unable insight member
      tags: *a24
      security:
        - bearer: []
    delete:
      operationId: removeInsightMemberById
      summary: Removes a member from an insight
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
        - name: memberId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbInsight"
        "400":
          description: Invalid request
        "404":
          description: Unable to remove insight member
      tags: *a24
      security:
        - bearer: []
  /v1/bake:
    post:
      operationId: Bake a repository with the pizza oven microservice
      summary: postToPizzaOvenService
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BakeRepoDto"
      responses:
        "201":
          description: ""
        "202":
          description: ""
        "400":
          description: Invalid request
      tags:
        &a25
        - Pizza oven service
  "/v1/bake/repos/{id}":
    get:
      operationId: findBakedRepoById
      summary: Finds a baked repo by :id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbBakedRepo"
        "404":
          description: Baked repository not found
      tags: *a25
  /v1/bake/repos/list:
    get:
      operationId: listAllBakedRepos
      summary: Finds all baked repos and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbBakedRepo"
      tags: *a25
  "/v1/bake/commit-authors/{id}":
    get:
      operationId: findCommitAuthorById
      summary: Finds a commit author by :id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbCommitAuthors"
        "404":
          description: Commit author not found
      tags: *a25
  /v1/bake/commit-authors/list:
    get:
      operationId: listAllCommitAuthors
      summary: Finds all commit authors and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbCommitAuthors"
      tags: *a25
  "/v1/bake/commits/{id}":
    get:
      operationId: findCommitById
      summary: Finds a commit by :id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbCommits"
        "404":
          description: Commit not found
      tags: *a25
  "/v1/bake/commits/list/repo/{id}":
    get:
      operationId: listAllCommitsByBakedRepoId
      summary: Finds all commits by baked repo :id and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbCommits"
      tags: *a25
  "/v1/bake/commits/list/commit-author/{id}":
    get:
      operationId: listAllCommitsByCommitAuthorId
      summary: Finds all commits by commit author :id and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbCommits"
      tags: *a25
  /v1/issues/summary/generate:
    post:
      operationId: generateIssueSummary
      summary: Generate a summary for an issue
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateIssueSummaryDto"
      responses:
        "201":
          description: ""
        "400":
          description: Invalid request
      tags:
        - Issue summary service
      security:
        - bearer: []
  /v1/blogs/summary/generate:
    post:
      operationId: generateBlogSummary
      summary: Generate a summary for a markdown supported blog
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBlogSummaryDto"
      responses:
        "201":
          description: ""
        "400":
          description: Invalid request
      tags:
        - Blog summary service
      security:
        - bearer: []
  /v1/stripe/webhooks:
    post:
      operationId: handleStripeWebhook
      parameters: []
      responses:
        "200":
          description: ""
        "201":
          description: ""
      tags:
        - Stripe service
  /v1/highlights/list:
    get:
      operationId: findAllHighlights
      summary: Finds all highlights and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: repo
          required: false
          in: query
          description: Highlight Repo Filter
          example: open-sauced/insights
          schema:
            type: string
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbUserHighlight"
      tags:
        &a26
        - Highlights service
  /v1/highlights/featured:
    get:
      operationId: findAllFeaturedHighlights
      summary: Finds all featured highlights and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: repo
          required: false
          in: query
          description: Highlight Repo Filter
          example: open-sauced/insights
          schema:
            type: string
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbUserHighlight"
      tags: *a26
  "/v1/highlights/{id}/featured":
    post:
      operationId: addAFeaturedHighlight
      summary: Add a highlight to the featured list
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserHighlight"
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Invalid request
        "404":
          description: Unable to find highlight
      tags: *a26
      security:
        - bearer: []
    delete:
      operationId: removeAFeaturedHighlight
      summary: Remove a highlight from the featured list
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserHighlight"
        "400":
          description: Invalid request
        "404":
          description: Unable to find highlight
      tags: *a26
      security:
        - bearer: []
  /v1/highlights/repos/list:
    get:
      operationId: findAllHighlightRepos
      summary: Finds all highlight repos and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbUserHighlightRepo"
      tags: *a26
  "/v1/highlights/{id}/reactions":
    get:
      operationId: getAllHighlightReactions
      summary: Retrieves total reactions for a highlight
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserHighlightReactionResponse"
        "400":
          description: Invalid request
        "404":
          description: Unable to get user highlight reactions
      tags: *a26
  /v1/highlights/top:
    get:
      operationId: findTopHighlights
      summary: Finds top highlights for the day range and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbUserHighlight"
      tags: *a26
  /v1/emojis:
    get:
      operationId: findAllEmojis
      summary: Listing all emojis and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbEmoji"
        "404":
          description: Emojis not found
      tags:
        - Emojis service
  /v1/endorsements:
    post:
      operationId: createEndorsement
      summary: Creates a new endorsement record
      parameters:
        - name: X-OpenSauced-token
          required: true
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEndorsementDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbEndorsement"
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: object
      tags:
        &a27
        - Endorsements service
    get:
      operationId: findAllEndorsements
      summary: Finds all endorsements and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbEndorsement"
      tags: *a27
  "/v1/endorsements/repos/{repoOwnerOrUser}":
    get:
      operationId: findAllByRepoOwnerOrUsername
      summary: Finds all endorsements by repo org or username and paginates them
      parameters:
        - name: repoOwnerOrUser
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbEndorsement"
      tags: *a27
  "/v1/endorsements/repos/{owner}/{repo}":
    get:
      operationId: findAllEndorsementsByRepo
      summary: Finds all endorsements by repo owner or username and paginates them
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
        - name: repo
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbEndorsement"
      tags: *a27
  "/v1/endorsements/{id}":
    get:
      operationId: findEndorsementById
      summary: Retrieves the endorsement based on ID
      description: >-
        operationId: "findAllEndorsementsByRepoByUser",

        summary: "Finds all endorsements by repo owner grouped by user",

        })


        async findAllEndorsementsByRepoByUser (




        ) {

        return this.endorsementService.findAllEndorsementsByRepoByUser(owner, repo, pageOptionsDto);

        }
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbEndorsement"
        "404":
          description: Endorsement not found
      tags: *a27
    delete:
      operationId: deleteEndoresementById
      summary: Finds ands deletes the endorsement by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
        "404":
          description: Endorsement not found
      tags: *a27
  "/v1/endorsements/user/{username}/created":
    get:
      operationId: findAllUserCreatedEndorsementsByUsername
      summary: Finds all endorsements received by the user and paginates them
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbEndorsement"
      tags: *a27
  "/v1/endorsements/user/{username}/received":
    get:
      operationId: findAllUserReceivedEndorsementsByUsername
      summary: Finds all endorsements received by the user and paginates them
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbEndorsement"
      tags: *a27
  /v1/contributors/search:
    get:
      operationId: searchAllPullRequestContributors
      summary: Searches contributors from pull requests using filters and paginates them
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: filter
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/InsightFilterFieldsEnum"
        - name: topic
          required: false
          in: query
          example: javascript
          schema:
            type: string
        - name: repo
          required: false
          in: query
          example: open-sauced/insights
          schema:
            type: string
        - name: repoIds
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbPullRequestContributor"
      tags:
        - Contributors service
  /v1/contributors/insights/new:
    get:
      operationId: newPullRequestContributors
      summary: Gets new contributors given a date range for repo IDs
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: repoIds
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbPullRequestContributor"
      tags:
        &a28
        - Contributors service
  /v1/contributors/insights/recent:
    get:
      operationId: findAllRecentPullRequestContributors
      summary: Gets all recent contributors for the last 30 days based on repo IDs
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: repoIds
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbPullRequestContributor"
      tags: *a28
  /v1/contributors/insights/churn:
    get:
      operationId: findAllChurnPullRequestContributors
      summary: Gets all recent churned contributors for the last 30 days based on repo
        IDs
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: repoIds
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbPullRequestContributor"
      tags: *a28
  /v1/contributors/insights/repeat:
    get:
      operationId: findAllRepeatPullRequestContributors
      summary: Gets all recent repeat contributors for the last 30 days based on repo
        IDs
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: repoIds
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbPullRequestContributor"
      tags: *a28
  /v1/lists:
    get:
      operationId: getListsForUser
      summary: Gets lists for the authenticated user
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserList"
        "400":
          description: Invalid request
        "404":
          description: Unable to get user lists
      tags:
        &a29
        - User Lists service
      security:
        - bearer: []
    post:
      operationId: addListForUser
      summary: Adds a new list for the authenticated user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserListDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserList"
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserList"
        "400":
          description: Invalid request
        "404":
          description: Unable to add user list
      tags: *a29
      security:
        - bearer: []
  "/v1/lists/{id}":
    get:
      operationId: getUserList
      summary: Retrieves an individual user list
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserList"
        "400":
          description: Invalid request
        "404":
          description: Unable to get user list
      tags: *a29
    patch:
      operationId: updateListForUser
      summary: Updates the list for the authenticated user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserListDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserList"
        "400":
          description: Invalid request
        "404":
          description: Unable to update user list
      tags: *a29
      security:
        - bearer: []
    delete:
      operationId: deleteListForUser
      summary: Deletes the list for the authenticated user
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Invalid request
        "404":
          description: Unable to delete user list
      tags: *a29
      security:
        - bearer: []
  /v1/lists/contributors:
    get:
      operationId: getContributors
      summary: Retrieves paginated contributors
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: location
          required: false
          in: query
          example:
            - Denver, Colorado
            - Germany
          schema:
            type: array
            items:
              type: string
        - name: contributor
          required: false
          in: query
          example: bdougie
          schema:
            type: string
        - name: timezone
          required: false
          in: query
          example:
            - Mountain Standard Time
            - UTC
          schema:
            type: array
            items:
              type: string
        - name: pr_velocity
          required: false
          in: query
          example: 2
          description: Less than or equal to the average number of days to merge a PR over
            the last 30 days
          schema:
            type: integer
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbUser"
        "400":
          description: Invalid request
        "404":
          description: Unable to get contributors
      tags: *a29
      security:
        - bearer: []
  "/v1/lists/{id}/contributors":
    get:
      operationId: getUserListContributors
      summary: Retrieves contributors for an individual user list
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbUserListContributor"
        "400":
          description: Invalid request
        "404":
          description: Unable to get user list contributors
      tags: *a29
    post:
      operationId: postUserListContributors
      summary: Add new contributors to an individual user list
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollaboratorsDto"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DbUserListContributor"
        "400":
          description: Invalid request
        "404":
          description: Unable to add to user list contributors
      tags: *a29
      security:
        - bearer: []
  "/v1/lists/{id}/contributors/{userListContributorId}":
    delete:
      operationId: deleteUserListContributor
      summary: Delete contributor from an individual user list
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: userListContributorId
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
        "400":
          description: Invalid request
        "404":
          description: Unable to delete user from user list contributors
      tags: *a29
      security:
        - bearer: []
  /v1/lists/timezones:
    get:
      operationId: getTimezones
      summary: Retrieves all users timezones
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbTimezone"
        "404":
          description: Unable to get timezones
      tags: *a29
  "/v1/lists/{id}/stats/most-active-contributors":
    get:
      operationId: getMostActiveContributors
      summary: Gets most active contributors for a given list
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 1000
            default: 10
            type: integer
        - name: orderDirection
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/OrderDirectionEnum"
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: prev_days_start_date
          required: false
          in: query
          description: Number of days in the past to start range block
          schema:
            default: 0
            type: integer
        - name: contributorType
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/UserListContributorStatsTypeEnum"
        - name: orderBy
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/UserListContributorStatsOrderEnum"
      responses:
        "200":
          description: Successfully received model list
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PageDto"
                  - properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/DbUserListContributorStat"
        "400":
          description: Invalid request
        "404":
          description: Unable to get list most active contributors
      tags:
        &a30
        - User Lists service
  "/v1/lists/{id}/stats/contributions-evolution-by-type":
    get:
      operationId: getContributionsByTimeFrame
      summary: Gets contributions in a given timeframe
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: contributorType
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/UserListContributorStatsTypeEnum"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbContributionStatTimeframe"
        "400":
          description: Invalid request
        "404":
          description: Unable to get contributions
      tags: *a30
  "/v1/lists/{id}/stats/contributions-by-project":
    get:
      operationId: getContributionsByProject
      summary: Gets contributions in a given timeframe
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbContributionsProjects"
        "400":
          description: Invalid request
        "404":
          description: Unable to get contributions by project
      tags: *a30
  "/v1/lists/{id}/stats/top-project-contributions-by-contributor":
    get:
      operationId: getContributorContributionsByProject
      summary: Gets top 20 contributor stats in a list by a given project
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: repo_id
          required: true
          in: query
          description: Repo ID
          example: 234343
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbUserListContributorStat"
        "400":
          description: Invalid request
        "404":
          description: Unable to get contributions
      tags: *a30
  "/v1/lists/{id}/stats/contributions-evolution-by-contributor-type":
    get:
      operationId: getContributorsByTimeframe
      summary: Gets contributions by category within timeframe
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: range
          required: false
          in: query
          description: Range in days
          schema:
            default: 30
            type: integer
        - name: contributorType
          required: false
          in: query
          schema:
            $ref: "#/components/schemas/UserListContributorStatsTypeEnum"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DbContributorCategoryTimeframe"
        "400":
          description: Invalid request
        "404":
          description: Unable to get contributions
      tags: *a30
info:
  title: "@open-sauced/api.opensauced.pizza"
  description: >-
    
    ## Swagger-UI API Documentation


    This REST API can be used to create, read, update or delete data from the Open Sauced community platform.

    The Swagger-UI provides useful information to get started and an overview of all available resources.

    Each API route is clickable and has their own detailed description on how to use it.

    The base URL for the API is [api.opensauced.pizza](https://api.opensauced.pizza).


    [comment]: # (TODO: add bearer auth information)


    ## Rate limiting


    Every IP address is allowed to perform 5000 requests per hour.

    This is measured by saving the date of the initial request and counting all requests in the next hour.

    When an IP address goes over the limit, HTTP status code 429 is returned.

    The returned HTTP headers of any API request show the current rate limit status:


    header | description

    --- | ---

    `X-RateLimit-Limit` | The maximum number of requests allowed per hour

    `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window

    `X-RateLimit-Reset` | The date and time at which the current rate limit window resets in [UTC epoch seconds](https://en.wikipedia.org/wiki/Unix_time)


    [comment]: # (TODO: add pagination information)


    ## Common response codes


    Each route shows for each method which data they expect and which they will respond when the call succeeds.

    The table below shows most common response codes you can receive from our endpoints.


    code | condition

    --- | ---

    [`200`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/200) | The [`GET`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET) request was handled successfully. The response provides the requested data.

    [`201`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201) | The [`POST`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST) request was handled successfully. The response provides the created data.

    [`204`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/204) | The [`PATCH`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH) or [`DELETE`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE) request was handled successfully. The response provides no data, generally.

    [`400`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400) | The server will not process the request due to something that is perceived to be a client error. Check the provided error for mote information.

    [`401`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401) | The request requires user authentication. Check the provided error for more information.

    [`403`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403) | The request was valid, but the server is refusing user access. Check the provided error for more information.

    [`404`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404) | The requested resource could not be found. Check the provided error for more information.

    [`429`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429) | The current API Key made too many requests in the last hour. Check [Rate limiting](#ratelimiting) for more information.


    ## Additional links
  version: "1"
  contact:
    name: Open Sauced
    url: https://opensauced.pizza
    email: hello@opensauced.pizza
  termsOfService: https://github.com/open-sauced/code-of-conduct
  license:
    name: The MIT License
    url: https://opensource.org/licenses/mit
tags: []
servers:
  - url: https://api.opensauced.pizza
    description: Production
    variables: {}
  - url: https://beta.api.opensauced.pizza
    description: Beta
    variables: {}
  - url: https://alpha.api.opensauced.pizza
    description: Alpha
    variables: {}
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    SupabaseAuthDto:
      type: object
      properties:
        id:
          type: string
          description: Supabase authenticated unique user identifier
          example: 237133
        user_name:
          type: string
          description: Supabase authenticated user login name
          example: 0-vortex
        role:
          type: string
          description: Supabase authenticated user role
          example: authenticated
        email:
          type: string
          description: Supabase authenticated user email
          example: vortex@opensauced.pizza
        confirmed_at:
          type: string
          description: Timestamp representing supabase user registration confirmation
          example: 2016-10-19 13:24:51.000000
        last_sign_in_at:
          type: string
          description: Timestamp representing supabase user last sign in
          example: 2016-10-19 13:24:51.000000
        created_at:
          type: string
          description: Timestamp representing supabase user creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          type: string
          description: Timestamp representing supabase user last update
          example: 2016-10-19 13:24:51.000000
        is_onboarded:
          type: boolean
          description: Flag indicated whether the user is onboarded
          example: false
        is_waitlisted:
          type: boolean
          description: Flag indicated whether the user is waitlisted
          example: false
        insights_role:
          type: integer
          description: Authenticated User's Insights Role
          example: 10
        bio:
          type: string
          description: User bio information
          example: OpenSauced User
        name:
          type: string
          description: User name information
          example: MrPizza
        url:
          type: string
          description: User website
          example: https://opensauced.pizza
        twitter_username:
          type: string
          description: User Twitter information
          example: saucedopen
        company:
          type: string
          description: User company information
          example: OpenSauced
        location:
          type: string
          description: User location information
          example: San Francisco, CA
        display_local_time:
          type: boolean
          description: User display local time information
          example: false
        linkedin_url:
          type: string
          description: LinkedIn URL
          example: https://www.linkedin.com/in/brianldouglas
        github_sponsors_url:
          type: string
          description: GitHub Sponsors URL
          example: https://github.com/sponsors/open-sauced
        discord_url:
          type: string
          description: Discord URL
          example: https://discord.gg/opensauced
        notification_count:
          type: integer
          description: Unread User Notification Count
          example: 5
        insights_count:
          type: integer
          description: Unread Insight Pagees Count
          example: 2
        coupon_code:
          type: string
          description: Coupon Code
          example: saucy
      required:
        - id
    UserOnboardingDto:
      type: object
      properties:
        interests:
          description: An array of interests
          example:
            - javascript
            - react
          type: array
          items:
            type: string
        timezone:
          type: string
          description: User timezone in UTC
          example: UTC-5
      required:
        - interests
        - timezone
    UpdateUserDto:
      type: object
      properties:
        name:
          type: string
          description: User Profile Name
          example: Pizza Maker
        email:
          type: string
          description: User Profile Email
          example: hello@opensauced.pizza
        bio:
          type: string
          description: User Profile Bio
          example: I make the pizza
        url:
          type: string
          description: User Profile URL
          example: https://opensauced.pizza
        twitter_username:
          type: string
          description: User Profile Twitter Username
          example: saucedopen
        company:
          type: string
          description: User Profile Company
          example: OpenSauced
        location:
          type: string
          description: User Profile Location
          example: OpenSauced
        display_local_time:
          type: boolean
          description: Display user local time in profile
          example: false
        timezone:
          type: string
          description: User timezone in UTC
          example: UTC-5
        linkedin_url:
          type: string
          description: LinkedIn URL
          example: https://www.linkedin.com/in/brianldouglas
        github_sponsors_url:
          type: string
          description: GitHub Sponsors URL
          example: https://github.com/sponsors/open-sauced
        discord_url:
          type: string
          description: Discord URL
          example: https://discord.gg/opensauced
      required:
        - name
        - email
    DbUser:
      type: object
      properties:
        id:
          type: integer
          description: User identifier
          example: 237133
        open_issues:
          type: integer
          description: Total number of open issues user has across public activity
          example: 498
        created_at:
          format: date-time
          type: string
          description: Timestamp representing user creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing user last update
          example: 2022-08-28 22:04:29.000000
        first_opened_pr_at:
          format: date-time
          type: string
          description: Timestamp representing user first open PR
          example: 2022-08-28 22:04:29.000000
        first_pushed_commit_at:
          format: date-time
          type: string
          description: Timestamp representing user first commit push
          example: 2022-08-28 22:04:29.000000
        connected_at:
          format: date-time
          type: string
          description: Timestamp representing user logging in to open sauced for the first
            time
          example: 2022-08-28 22:04:29.000000
        node_id:
          type: string
          description: User GitHub node id
          example: MDQ6VXNlcjIzNzEzMw==
        avatar_url:
          type: string
          description: User GitHub avatar URL
          example: https://avatars.githubusercontent.com/u/237133?v=4
        gravatar_id:
          type: string
          description: User GitHub gravatar URL
          example: ""
        url:
          type: string
          description: User GitHub profile URL
          example: https://api.github.com/users/0-vortex
        login:
          type: string
          description: User unique login name
          example: 0-vortex
        email:
          type: string
          description: User email address
          example: hello@opensauced.pizza
        is_private:
          type: boolean
          description: Flag indicating whether user opted to have a private profile (beta
            feature
          example: false
          default: false
        is_open_sauced_member:
          type: boolean
          description: Flag indicating app.opensauced user status
          example: false
          default: false
        is_onboarded:
          type: boolean
          description: Flag indicating user's onboarding status
          example: false
          default: false
        is_waitlisted:
          type: boolean
          description: Flag indicating user's waitlist status
          example: false
          default: false
        role:
          type: integer
          description: Insights Role
          example: 10
          default: 10
        bio:
          type: string
          description: User bio information
          example: OpenSauced User
        blog:
          type: string
          description: GitHub blog information
          example: https://opensauced.pizza/blog
        name:
          type: string
          description: User name information
          example: MrPizza
        twitter_username:
          type: string
          description: User Twitter information
          example: saucedopen
        linkedin_url:
          type: string
          description: LinkedIn URL
          example: https://www.linkedin.com/in/brianldouglas
        github_sponsors_url:
          type: string
          description: GitHub Sponsors URL
          example: https://github.com/sponsors/open-sauced
        discord_url:
          type: string
          description: Discord URL
          example: https://discord.gg/opensauced
        company:
          type: string
          description: User company information
          example: OpenSauced
        location:
          type: string
          description: User location information
          example: San Francisco, CA
        display_local_time:
          type: boolean
          description: User display local time information
          example: false
        interests:
          type: string
          description: User topic interests
          example: javascript
        hireable:
          type: boolean
          description: GitHub user hireable status
          example: false
        public_repos:
          type: integer
          description: GitHub user public repos number
          example: 0
        public_gists:
          type: integer
          description: GitHub user public gists number
          example: 0
        followers:
          type: integer
          description: GitHub user public followers number
          example: 0
        following:
          type: integer
          description: GitHub user public following number
          example: 0
        type:
          type: string
          description: GitHub user type
          example: User
          default: User
        display_email:
          type: boolean
          description: User display public email
          example: false
        receive_collaboration:
          type: boolean
          description: User receives collaboration requests
          example: false
        timezone:
          type: string
          description: User timezone in UTC
          example: UTC-5
        coupon_code:
          type: string
          description: Coupon Code
          example: saucy
        languages:
          type: object
          description: GitHub top languages
          example: "{ TypeScript: 33128, HTML: 453, JavaScript: 90, CSS: 80 }"
          default: {}
        notification_count:
          type: integer
          description: User notification count
          example: 0
        insights_count:
          type: integer
          description: User insight pages count
          example: 0
        highlights_count:
          type: integer
          description: User highlights count
          example: 0
        following_count:
          type: integer
          description: User following count
          example: 0
        followers_count:
          type: integer
          description: User followers count
          example: 0
        recent_pull_requests_count:
          type: integer
          description: Count of user pull requests within the last 30 days
          example: 0
        recent_pull_request_velocity_count:
          type: integer
          description: User average pull request velocity in days over the last 30 days
          example: 0
        is_maintainer:
          type: boolean
          description: Flag to indicate if user is a maintainer of any repos
          example: true
      required:
        - id
        - open_issues
        - node_id
        - avatar_url
        - login
        - email
        - is_private
        - is_open_sauced_member
        - is_onboarded
        - is_waitlisted
        - role
        - public_repos
        - public_gists
        - followers
        - following
        - type
        - languages
        - notification_count
        - insights_count
        - highlights_count
        - following_count
        - followers_count
        - recent_pull_requests_count
        - recent_pull_request_velocity_count
        - is_maintainer
    UpdateUserProfileInterestsDto:
      type: object
      properties:
        interests:
          description: An array of interests
          example:
            - javascript
            - react
          type: array
          items:
            type: string
      required:
        - interests
    UpdateUserEmailPreferencesDto:
      type: object
      properties:
        display_email:
          type: boolean
          description: User Display Public Email
          example: false
        receive_collaboration:
          type: boolean
          description: User Recieve Collaboration Requests
          example: false
      required:
        - display_email
        - receive_collaboration
    ApplyUserCouponDto:
      type: object
      properties:
        couponCode:
          type: string
          description: Coupon Code
          example: saucy
      required:
        - couponCode
    PageMetaDto:
      type: object
      properties:
        page:
          type: integer
          description: The current page
          example: 1
        limit:
          type: integer
          description: The number of items per page
          example: 10
        itemCount:
          type: integer
          description: The number of items in the collection
          example: 100
        pageCount:
          type: integer
          description: The number of pages in the collection
          example: 10
        hasPreviousPage:
          type: boolean
          description: Flag indicating if there is a previous page
          example: false
        hasNextPage:
          type: boolean
          description: Flag indicating if there is a next page
          example: true
      required:
        - page
        - limit
        - itemCount
        - pageCount
        - hasPreviousPage
        - hasNextPage
    PageDto:
      type: object
      properties:
        data:
          type: array
          items:
            type: array
        meta:
          $ref: "#/components/schemas/PageMetaDto"
      required:
        - data
        - meta
    DbPullRequest:
      type: object
      properties:
        id:
          type: integer
          description: Pull request identifier
          example: 1045024650
        number:
          type: integer
          description: Pull request number
          example: 612
        state:
          type: string
          description: Pull request state
          example: closed
        draft:
          type: boolean
          description: Pull request is draft
          example: false
        merged:
          type: boolean
          description: Pull request is merged
          example: false
        mergeable:
          type: boolean
          description: Pull request is mergeable
          example: false
        rebaseable:
          type: boolean
          description: Pull request is rebaseable
          example: false
        title:
          type: string
          description: Pull request title
          example: "fix(cli): arg tags value with equal sign"
        source_label:
          type: string
          description: Pull request source ref
          example: Th3nn3ss:cli_split_kwargs
        target_label:
          type: string
          description: Pull request target ref
          example: aws:main
        source_branch:
          type: string
          description: Pull request source branch
          example: main
        target_branch:
          type: string
          description: Pull request target branch
          example: cli_split_kwargs
        labels:
          type: string
          description: Pull request labels
          example: >-
            [
                  {
                    "id": 4456742596,
                    "url": "https://api.github.com/repos/denoland/fresh/labels/showcase",
                    "name": "showcase",
                    "color": "0e8a16",
                    "default": false,
                    "node_id": "LA_kwDOFcV7488AAAABCaR-xA",
                    "description": ""
                  }
                ]
        label_names:
          description: Pull request label names
          example: showcase
          type: array
          items:
            type: string
        author_login:
          type: string
          description: Pull request author username
          example: Th3nn3ss
        author_avatar:
          type: string
          description: Pull request author avatar
          example: https://avatars.githubusercontent.com/u/25160953?v=4
        assignee_login:
          type: string
          description: Pull request assignee username
          example: null
        assignee_avatar:
          type: string
          description: Pull request assignee avatar
          example: null
        created_at:
          format: date-time
          type: string
          description: Timestamp representing pr creation date
          example: 2022-08-28 22:04:29.000000
        closed_at:
          format: date-time
          type: string
          description: Timestamp representing pr close date
          example: 2022-08-28 22:04:29.000000
        merged_at:
          format: date-time
          type: string
          description: Timestamp representing pr merge date
          example: 2022-08-28 22:04:29.000000
        merged_by_login:
          type: string
          description: Pull request merged by username
          example: bdougie
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing repository last update
          example: 2022-08-28 22:04:29.000000
        last_updated_at:
          format: date-time
          type: string
          description: Timestamp representing internal last update
          example: 2022-08-28 22:04:29.000000
        comments:
          type: integer
          description: PR comments
          example: 0
        additions:
          type: integer
          description: PR lines added
          example: 10
        deletions:
          type: integer
          description: PR lines deleted
          example: 5
        changed_files:
          type: integer
          description: PR files changed
          example: 5
        full_name:
          type: string
          description: Pull request repo full name
          example: open-sauced/insights
        commits:
          type: integer
          description: Number of commits in the PR
          example: 4
      required:
        - id
        - number
        - state
        - draft
        - merged
        - mergeable
        - rebaseable
        - title
        - author_login
        - author_avatar
    OrderDirectionEnum:
      type: string
      enum:
        - ASC
        - DESC
    DbUserHighlight:
      type: object
      properties:
        id:
          type: integer
          description: User Highlight identifier
          example: 237133
        user_id:
          type: integer
          description: User identifier
          example: 237133
        url:
          type: string
          description: Highlight Pull Request URL
          example: github.com/open-sauced/insights/pull/1
        title:
          type: string
          description: Highlight Title
          example: My First PR!
        highlight:
          type: string
          description: Highlight Text
          example: |-2
            
                I made my first open source pull request!

                github.com/open-sauced/insights/pull/1
        type:
          type: string
          description: Highlight type
          example: pull_request
        pinned:
          type: boolean
          description: Whether the highlight is pinned to the top
          example: false
        featured:
          type: boolean
          description: Whether the highlight is featured or not
          example: false
        created_at:
          format: date-time
          type: string
          description: Timestamp representing highlight creation date
          example: 2023-01-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing highlight updated date
          example: 2023-01-19 13:24:51.000000
        deleted_at:
          format: date-time
          type: string
          description: Timestamp representing highlight deletion date
          example: 2023-01-19 13:24:51.000000
        shipped_at:
          format: date-time
          type: string
          description: Timestamp representing highlight shipped date
          example: 2023-01-19 13:24:51.000000
        full_name:
          type: string
          description: Highlight Repo Full Name
          example: open-sauced/insights
        name:
          type: string
          description: Highlight User Full Name
          example: Brian Douglas
        login:
          type: string
          description: Highlight User Login
          example: bdougie
        tagged_repos:
          description: An array of full-names of tagged repositories
          example:
            - open-sauced/insights
            - open-sauced/ai
          type: array
          items:
            type: string
      required:
        - id
        - user_id
        - highlight
        - type
        - tagged_repos
    DbRepo:
      type: object
      properties:
        id:
          type: integer
          description: Repository identifier
          example: 71359796
        user_id:
          type: integer
          description: Owner user identifier
          example: 57568598
        size:
          type: integer
          description: Total size in bytes
          example: 274322
        issues:
          type: integer
          description: Total number of issues
          example: 274
        stars:
          type: integer
          description: Total number of stars
          example: 5
        forks:
          type: integer
          description: Total number of forks
          example: 1
        watchers:
          type: integer
          description: Total number of watchers
          example: 5473
        subscribers:
          type: integer
          description: Total number of subscribers
          example: 11756
        network:
          type: integer
          description: Total number of network usages
          example: 4
        is_fork:
          type: boolean
          description: Flag indicating repo is a fork
          example: false
        is_private:
          type: boolean
          description: Flag indicating repo is private
          example: false
        is_template:
          type: boolean
          description: Flag indicating repo is a template
          example: false
        is_archived:
          type: boolean
          description: Flag indicating repo is archived
          example: false
        is_disabled:
          type: boolean
          description: Flag indicating repo is disabled
          example: false
        has_issues:
          type: boolean
          description: Flag indicating repo has issues enabled
          example: false
        has_projects:
          type: boolean
          description: Flag indicating repo has projects enabled
          example: false
        has_downloads:
          type: boolean
          description: Flag indicating repo has downloads enabled
          example: false
        has_wiki:
          type: boolean
          description: Flag indicating repo has wiki enabled
          example: false
        has_pages:
          type: boolean
          description: Flag indicating repo has pages enabled
          example: false
        has_discussions:
          type: boolean
          description: Flag indicating repo has discussions enabled
          example: false
        created_at:
          format: date-time
          type: string
          description: Timestamp representing repository creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing repository last update
          example: 2022-08-28 22:04:29.000000
        pushed_at:
          format: date-time
          type: string
          description: Timestamp representing repository last push
          example: 2022-08-28 22:04:39.000000
        default_branch:
          type: string
          description: Repository default branch
          example: main
        node_id:
          type: string
          description: Repository GQL node id
          example: MDEwOlJlcG9zaXRvcnk3MTM1OTc5Ng==
        git_url:
          type: string
          description: Repository git url
          example: git://github.com/open-sauced/insights.git
        ssh_url:
          type: string
          description: Repository ssh url
          example: git@github.com:open-sauced/insights.git
        clone_url:
          type: string
          description: Repository clone url
          example: https://github.com/open-sauced/insights.git
        svn_url:
          type: string
          description: Repository svn url
          example: https://github.com/open-sauced/insights
        mirror_url:
          type: string
          description: Repository mirror url
          example: null
        name:
          type: string
          description: Repository unique name
          example: open-sauced
        full_name:
          type: string
          description: Repository full name
          example: open-sauced/insights
        description:
          type: string
          description: Repository short description
          example: 🍕This is a project to identify your next open source contribution! 🍕
        language:
          type: string
          description: Repository programming language
          example: JavaScript
        license:
          type: string
          description: Repository SPDX license
          example: MIT
        url:
          type: string
          description: Repository GitHub linked URL
          example: https://api.github.com/repos/open-sauced/insights
        homepage:
          type: string
          description: Repository GitHub homepage
          example: https://app.opensauced.pizza
        topics:
          description: Repository GitHub topics
          example:
            - open-sauced
            - open-source
            - github
          type: array
          items:
            type: string
        open_prs_count:
          type: integer
          description: Repository number of open PRs
          example: 5
        closed_prs_count:
          type: integer
          description: Repository number of closed PRs
          example: 173
        merged_prs_count:
          type: integer
          description: Repository number of merged PRs
          example: 276
        draft_prs_count:
          type: integer
          description: Repository number of draft PRs
          example: 2
        spam_prs_count:
          type: integer
          description: Repository number of spam PRs
          example: 2
        pr_velocity_count:
          type: integer
          description: Repository average open/close time for PRs
          example: 0
        pr_active_count:
          type: integer
          description: Number of non-closed PRs updated within the day range
          example: 0
      required:
        - id
        - user_id
        - size
        - issues
        - stars
        - forks
        - watchers
        - subscribers
        - network
        - is_fork
        - is_private
        - is_template
        - is_archived
        - is_disabled
        - has_issues
        - has_projects
        - has_downloads
        - has_wiki
        - has_pages
        - has_discussions
        - default_branch
        - node_id
        - git_url
        - ssh_url
        - clone_url
        - svn_url
        - name
        - full_name
        - description
        - language
        - license
        - url
        - homepage
        - topics
    DbTopUser:
      type: object
      properties:
        login:
          type: string
          description: Top User Login
          example: bdougie
    DbFilteredUser:
      type: object
      properties:
        login:
          type: string
          description: User Login
          example: bdougie
        full_name:
          type: string
          description: Users fullname
          example: Brian Douglas
      required:
        - full_name
    CreateUserHighlightDto:
      type: object
      properties:
        url:
          type: string
          description: Highlight PR URL
          example: github.com/open-sauced/insights/pull/1
        title:
          type: string
          description: Highlight Title
          example: My first PR!
        highlight:
          type: string
          description: Highlight Text
          example: My first PR to Open Sauced!
        shipped_at:
          type: string
          description: Shipped Date
          example: 2023-01-19 13:24:51.000000
        type:
          type: string
          default: pull_request
          description: Highlight type
          example: pull_request
        taggedRepos:
          description: An array of full-names of tagged repositories
          example:
            - open-sauced/insights
            - open-sauced/ai
          type: array
          items:
            type: string
      required:
        - url
        - highlight
        - type
        - taggedRepos
    OmitTypeClass:
      type: object
      properties:
        id:
          type: integer
          description: Notification identifier
          example: 237133
        user_id:
          type: integer
          description: User ID
          example: 498
        from_user_id:
          type: integer
          description: From User ID
          example: 43311
        type:
          type: string
          description: User notification type
          example: welcome
        message:
          type: string
          description: User notification message
          example: bdougie followed you
        notified_at:
          format: date-time
          type: string
          description: Timestamp representing db-user-notification creation
          example: 2022-10-19 13:24:51.000000
        meta_id:
          type: string
          description: Notification Source ID (highlight, user, invite)
          example: "133"
      required:
        - id
        - user_id
        - type
    DbUserHighlightReactionResponse:
      type: object
      properties:
        emoji_id:
          type: string
          description: Emoji identifier
          example: uuid-v4
        reaction_count:
          type: integer
        reaction_users:
          description: Usernames of users who reacted with this emoji
          example:
            - RitaDee
            - diivi
          type: array
          items:
            type: string
      required:
        - emoji_id
    DbUserHighlightReaction:
      type: object
      properties:
        id:
          type: string
          description: Reaction identifier
          example: uuid-v4
        highlight_id:
          type: integer
          description: Highlight identifier
          example: 71359796
        user_id:
          type: integer
          description: User identifier
          example: 237133
        emoji_id:
          type: string
          description: Emoji identifier
          example: uuid-v4
        created_at:
          format: date-time
          type: string
          description: Timestamp representing highlight reaction creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing highlight reaction last update
          example: 2022-08-28 22:04:29.000000
        reaction_count:
          type: integer
      required:
        - id
        - highlight_id
        - user_id
        - emoji_id
    DbUserHighlightRepo:
      type: object
      properties:
        full_name:
          type: string
          description: Highlight Repo Full Name
          example: open-sauced/insights
    DbUserToUserFollows:
      type: object
      properties:
        id:
          type: integer
          description: User Follow identifier
          example: 196
        user_id:
          type: integer
          description: User identifier
          example: 237133
        following_user_id:
          type: integer
          description: User follower identifier
          example: 71359796
        created_at:
          format: date-time
          type: string
          description: Timestamp representing user follow creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing user follow last update
          example: 2022-08-28 22:04:29.000000
      required:
        - id
        - user_id
        - following_user_id
    DbUserCollaboration:
      type: object
      properties:
        id:
          type: string
          description: User Collaboration identifier
          example: uuid-v4
        user_id:
          type: integer
          description: Collaboration Receipient User ID
          example: 237133
        request_user_id:
          type: integer
          description: Collaboration Request User ID
          example: 31333
        message:
          type: string
          description: Collaboration Request Message
          example: Hey, are you up for collaborating on this cool project?
        status:
          type: string
          description: Collaboration Status
          example: pending
        created_at:
          format: date-time
          type: string
          description: Timestamp representing user collaboration creation
          example: 2022-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing user collaboration last updated
          example: 2022-10-19 13:24:51.000000
        deleted_at:
          format: date-time
          type: string
          description: Timestamp representing user collaboration deletion
          example: 2022-10-19 13:24:51.000000
        request_emailed_at:
          format: date-time
          type: string
          description: Timestamp representing collaboration request email sent date
          example: 2023-04-10 13:24:51.000000
        collaboration_emailed_at:
          format: date-time
          type: string
          description: Timestamp representing collaboration acceptance email sent date
          example: 2023-04-10 13:24:51.000000
      required:
        - id
        - message
        - status
    CreateUserCollaborationDto:
      type: object
      properties:
        username:
          type: string
          description: Collaboration Recipient Username
          example: bdougie
        message:
          type: string
          description: Collaboration Request Message
          example: Come collaborate on a cool project
      required:
        - username
        - message
    UpdateUserCollaborationDto:
      type: object
      properties:
        status:
          type: string
          description: Collaboration Request Status
          example: accept
      required:
        - status
    DbEndorsement:
      type: object
      properties:
        id:
          type: string
          description: Endorsement identifier
          example: uuid-v4
        creator_user_id:
          type: integer
          description: Endorsement Creator User ID
          example: 237133
        recipient_user_id:
          type: integer
          description: Endorsement Recipient User ID
          example: 31333
        repo_id:
          type: integer
          description: Repository ID
          example: 78133
        source_comment_url:
          type: string
          description: Endorsement Source Comment URL
        source_context_url:
          type: string
          description: Endorsement Source Context URL
        type:
          type: string
          description: Endorsement Type
          example: doc
        created_at:
          format: date-time
          type: string
          description: Timestamp representing endorsement creation
          example: 2022-10-19 13:24:51.000000
      required:
        - id
        - repo_id
        - source_context_url
        - type
    PullRequestOrderFieldsEnum:
      type: string
      enum:
        - created_at
        - closed_at
        - merged_at
        - updated_at
    InsightFilterFieldsEnum:
      type: string
      enum:
        - recent
        - top-100-repos
        - minimum-5-contributors
        - most-active
        - most-spammed
    PullRequestStatusEnum:
      type: string
      enum:
        - open
        - closed
    DbPRInsight:
      type: object
      properties:
        id:
          type: integer
          description: Repository identifier
          example: 71359796
        interval:
          type: integer
          description: Selected interval in numerical days, goes back with number, 0 means
            today
          example: 1
          default: 0
        day:
          type: string
          description: Selected interval computed date in human readable format
          example: 2022-08-28
          format: date
        all_prs:
          type: integer
          description: "PR Type: all requests count"
          example: 287
        accepted_prs:
          type: integer
          description: "PR Type: accepted requests count"
          example: 287
        spam_prs:
          type: integer
          description: "PR Type: spam requests count"
          example: 287
      required:
        - id
        - interval
        - day
        - all_prs
        - accepted_prs
        - spam_prs
    DbPullRequestReview:
      type: object
      properties:
        id:
          type: integer
          description: Pull request review identifier
          example: 123456789
        reviewer_login:
          type: string
          description: Pull request reviewer username
          example: Bdougie
        created_at:
          format: date-time
          type: string
          description: Timestamp representing pr review creation date
          example: 2022-08-28 22:04:29.000000
        published_at:
          format: date-time
          type: string
          description: Timestamp representing pr review published date
          example: 2022-08-28 22:04:29.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing pr review update date
          example: 2022-08-28 22:04:29.000000
        state:
          type: string
          description: Pull request review state
          example: approved
        pullRequest:
          $ref: "#/components/schemas/DbPullRequest"
      required:
        - id
        - reviewer_login
        - pullRequest
    GeneratePullRequestDescriptionDto:
      type: object
      properties:
        descriptionLength:
          type: integer
          description: Description Length
          example: 250
        temperature:
          type: integer
          description: Description Temperature
          example: 7
        tone:
          type: string
          description: Description Tone
          example: formal
        language:
          type: string
          description: Description Language
          example: english
          default: english
        diff:
          type: string
          description: PR Diff
        commitMessages:
          description: PR Commit Messages
          example:
            - "chore: fixed a bug with the UI"
            - "style: added some rounded corners to some boxes"
          type: array
          items:
            type: string
      required:
        - descriptionLength
        - temperature
        - tone
        - language
    GenerateCodeRefactorSuggestionDto:
      type: object
      properties:
        descriptionLength:
          type: integer
          description: Suggestion Length
          example: 250
        temperature:
          type: integer
          description: Description Temperature
          example: 7
        language:
          type: string
          description: Suggestion Language
          example: english
          default: english
        code:
          type: string
          description: Code
      required:
        - descriptionLength
        - temperature
        - language
        - code
    GenerateCodeTestSuggestionDto:
      type: object
      properties:
        descriptionLength:
          type: integer
          description: Suggestion Length
          example: 250
        temperature:
          type: integer
          description: Description Temperature
          example: 7
        code:
          type: string
          description: Code
      required:
        - descriptionLength
        - temperature
        - code
    GenerateCodeExplanationDto:
      type: object
      properties:
        descriptionLength:
          type: integer
          description: Description Length
          example: 250
        temperature:
          type: integer
          description: Description Temperature
          example: 7
        language:
          type: string
          description: Description Language
          example: english
          default: english
        code:
          type: string
          description: Code
      required:
        - descriptionLength
        - temperature
        - language
        - code
    RepoOrderFieldsEnum:
      type: string
      enum:
        - issues
        - stars
        - watchers
        - subscribers
        - created_at
        - updated_at
        - name
        - contributionsCount
        - votesCount
        - submissionsCount
        - stargazersCount
        - starsCount
    DbRepoToUserVotes:
      type: object
      properties:
        id:
          type: integer
          description: Vote identifier
          example: 196
        user_id:
          type: integer
          description: User identifier
          example: 237133
        repo_id:
          type: integer
          description: Repository identifier
          example: 71359796
        created_at:
          format: date-time
          type: string
          description: Timestamp representing vote creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing vote last update
          example: 2022-08-28 22:04:29.000000
      required:
        - id
        - user_id
        - repo_id
    VotedRepoDto:
      type: object
      properties:
        voted:
          type: boolean
          description: If the user has voted for the repo
          example: true
        data:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/DbRepoToUserVotes"
      required:
        - voted
        - data
    DbRepoToUserStars:
      type: object
      properties:
        id:
          type: integer
          description: Star identifier
          example: 196
        user_id:
          type: integer
          description: User identifier
          example: 237133
        repo_id:
          type: integer
          description: Repository identifier
          example: 71359796
        created_at:
          format: date-time
          type: string
          description: Timestamp representing star creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing star last update
          example: 2022-08-28 22:04:29.000000
      required:
        - id
        - user_id
        - repo_id
    DbRepoToUserStargazers:
      type: object
      properties:
        id:
          type: integer
          description: Stargaze identifier
          example: 196
        user_id:
          type: integer
          description: User identifier
          example: 237133
        repo_id:
          type: integer
          description: Repository identifier
          example: 71359796
        created_at:
          format: date-time
          type: string
          description: Timestamp representing stargaze creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing stargaze last update
          example: 2022-08-28 22:04:29.000000
      required:
        - id
        - user_id
        - repo_id
    DbRepoToUserSubmissions:
      type: object
      properties:
        id:
          type: integer
          description: Submission identifier
          example: 196
        user_id:
          type: integer
          description: User identifier
          example: 237133
        repo_id:
          type: integer
          description: Repository identifier
          example: 71359796
        is_accepted:
          type: boolean
          description: Flag representing if the submission is approved by open sauced staff
          example: false
        created_at:
          format: date-time
          type: string
          description: Timestamp representing submission creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing submission last update
          example: 2022-08-28 22:04:29.000000
      required:
        - id
        - user_id
        - repo_id
    DbContribution:
      type: object
      properties:
        id:
          type: integer
          description: Contribution identifier
          example: 12237133
        repo_id:
          type: integer
          description: Repository identifier
          example: 71359796
        count:
          type: integer
          description: Total number of contributed pull requests
          example: 15
        last_merged_at:
          format: date-time
          type: string
          description: Timestamp representing last contribution merge to the default branch
          example: 2016-10-19 13:24:51.000000
        created_at:
          format: date-time
          type: string
          description: Timestamp representing contribution creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing contribution last update
          example: 2022-08-28 22:04:29.000000
        contributor:
          type: string
          description: Contributor unique user name
          example: 0-vortex
        url:
          type: string
          description: Contribution GitHub origin URL
          example: https://github.com/open-sauced/hot/pull/320
      required:
        - id
        - repo_id
        - count
        - last_merged_at
        - contributor
        - url
    DbRepoLoginContributions:
      type: object
      properties:
        login:
          type: string
          description: User list collaborator's login
          example: bdougie
        commits:
          type: integer
          description: Number of commits associated with a user login
          example: 0
        prs_created:
          type: integer
          description: Number of PRs created associated with a user login
          example: 0
        prs_reviewed:
          type: integer
          description: Number of PRs reviewed by a user login
          example: 0
        issues_created:
          type: integer
          description: Number of issues created by a user login
          example: 0
        comments:
          type: integer
          description: Number of comments associated with a user login
          example: 0
      required:
        - commits
        - prs_created
        - prs_reviewed
        - issues_created
        - comments
    DbInsight:
      type: object
      properties:
        id:
          type: integer
          description: Insight identifier
          example: 237133
        user_id:
          type: integer
          description: User ID
          example: 237133
        name:
          type: string
          description: Insight Page Name
          example: Open Sauced Team
        is_public:
          type: boolean
          description: Flag indicating insight visibility
          example: false
        is_favorite:
          type: boolean
          description: Flag indicating insight favorite
          example: false
        is_featured:
          type: boolean
          description: Flag indicating featured insight
          example: false
        short_code:
          type: string
          description: Title
          example: Insight Page Short Code
        created_at:
          format: date-time
          type: string
          description: Timestamp representing insight creation
          example: 2022-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing insight last updated
          example: 2022-10-19 13:24:51.000000
        deleted_at:
          format: date-time
          type: string
          description: Timestamp representing insight deletion
          example: 2022-10-19 13:24:51.000000
      required:
        - id
        - user_id
        - name
        - is_public
        - is_favorite
        - is_featured
        - short_code
    RepoInfo:
      type: object
      properties:
        id:
          type: integer
          description: Repo ID
          example: 234343
        fullName:
          type: string
          description: Repo Full Name
          example: open-sauced/insights
      required:
        - id
        - fullName
    UpdateInsightDto:
      type: object
      properties:
        name:
          type: string
          description: Insight Page Name
          example: My Team
        is_public:
          type: boolean
          description: Insight Page Visibility
          example: false
        repos:
          description: An array of repository information objects
          example:
            &a31
            - id: 797
              full_name: open-sauced/insights
          type: array
          items:
            $ref: "#/components/schemas/RepoInfo"
      required:
        - name
        - is_public
        - repos
    CreateInsightDto:
      type: object
      properties:
        name:
          type: string
          description: Insight Page Name
          example: My Team
        is_public:
          type: boolean
          description: Insight Page Visibility
          example: false
        repos:
          description: An array of repository information objects
          example: *a31
          type: array
          items:
            $ref: "#/components/schemas/RepoInfo"
      required:
        - name
        - is_public
        - repos
    DbInsightMember:
      type: object
      properties:
        id:
          type: string
          description: Insight Member identifier
          example: uuid-v4
        insight_id:
          type: integer
          description: Insight ID
          example: 237133
        user_id:
          type: integer
          description: User ID
          example: 237133
        name:
          type: string
          description: User's Name
          example: Brian Douglas
        access:
          type: string
          description: Insight Member Access
          example: pending
        created_at:
          format: date-time
          type: string
          description: Timestamp representing team member creation
          example: 2022-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing team member last updated
          example: 2022-10-19 13:24:51.000000
        deleted_at:
          format: date-time
          type: string
          description: Timestamp representing team member deletion
          example: 2022-10-19 13:24:51.000000
        invitation_emailed_at:
          format: date-time
          type: string
          description: Timestamp representing team member invitation email sent date
          example: 2023-04-10 13:24:51.000000
        invitation_email:
          type: string
          description: Team Member Invitation Email
          example: hello@opensauced.pizza
      required:
        - id
        - insight_id
        - access
    CreateInsightMemberDto:
      type: object
      properties:
        email:
          type: string
          description: Insight Team Member Invite Email
          example: hello@opensauced.pizza
      required:
        - email
    UpdateInsightMemberDto:
      type: object
      properties:
        access:
          type: string
          description: Insight Member Access
          example: view
      required:
        - access
    BakeRepoDto:
      type: object
      properties:
        url:
          type: string
          description: Repo clone URL
          example: https://github.com/open-sauced/insights
        wait:
          type: boolean
          description: Option to wait for Pizza service to finish baking repo
          example: false
      required:
        - url
        - wait
    DbBakedRepo:
      type: object
      properties:
        id:
          type: integer
          description: Baked repository identifier
          example: 71359796
        clone_url:
          type: string
          description: Repository clone url
          example: https://github.com/open-sauced/insights.git
        repo_id:
          type: integer
          description: Repository identifier
          example: 12345678
      required:
        - id
        - clone_url
        - repo_id
    DbCommitAuthors:
      type: object
      properties:
        id:
          type: integer
          description: Commit author identifier
          example: 71359796
      required:
        - id
    DbCommits:
      type: object
      properties:
        id:
          type: integer
          description: Commit identifier
          example: 71359796
        commit_hash:
          type: string
          description: Hash for the commit
          example: 5e7c6c7af42d38c57f363c564c58007da448c443
        commit_date:
          type: string
          description: Date for the commit
          example: 5e7c6c7af42d38c57f363c564c58007da448c443
        baked_repo_id:
          type: integer
          description: Baked repo identifier
          example: 57568598
        commit_author_id:
          type: integer
          description: Commit author identifier
          example: 9876543
      required:
        - id
        - commit_hash
        - commit_date
        - baked_repo_id
        - commit_author_id
    CreateIssueSummaryDto:
      type: object
      properties:
        summaryLength:
          type: integer
          description: Summary Length
          example: 250
        temperature:
          type: integer
          description: Summary Temperature
          example: 7
        tone:
          type: string
          description: Summary Tone
          example: formal
        language:
          type: string
          description: Summary Language
          example: english
          default: english
        issueTitle:
          type: string
          description: Issue Title
        issueDescription:
          type: string
          description: Issue Description
        issueComments:
          type: string
          description: Issue Comments
      required:
        - summaryLength
        - temperature
        - tone
        - language
        - issueTitle
        - issueDescription
        - issueComments
    CreateBlogSummaryDto:
      type: object
      properties:
        summaryLength:
          type: integer
          description: Summary Length
          example: 250
        temperature:
          type: integer
          description: Summary Temperature
          example: 7
        tone:
          type: string
          description: Summary Tone
          example: formal
        language:
          type: string
          description: Summary Language
          example: english
          default: english
        blogTitle:
          type: string
          description: Blog Title
        blogMarkdown:
          type: string
          description: Blog Markdown
      required:
        - summaryLength
        - temperature
        - tone
        - language
        - blogTitle
        - blogMarkdown
    DbEmoji:
      type: object
      properties:
        id:
          type: string
          description: Emoji identifier
          example: uuid-v4
        name:
          type: string
          description: Emoji Name
          example: "100"
        url:
          type: string
          description: Emoji URL
          example: https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png?v8
        display_order:
          type: integer
          description: Emoji display order
          example: 1
        created_at:
          format: date-time
          type: string
          description: Timestamp representing highlight reaction creation
          example: 2016-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing highlight reaction last update
          example: 2022-08-28 22:04:29.000000
      required:
        - id
        - name
        - url
        - display_order
    CreateEndorsementDto:
      type: object
      properties:
        creator_user_id:
          type: integer
          description: Endorsement Creator User ID
          example: 42211
        recipient_user_id:
          type: integer
          description: Endorsement Recipient User ID
          example: 5736810
        repo_id:
          type: integer
          description: Repository ID
          example: 78133
        source_comment_url:
          type: string
          description: Endorsement Source Comment URL
          default: ""
        source_context_url:
          type: string
          description: Endorsement Source Context URL
          example: https://github.com/open-sauced/insights/pulls
        type:
          type: string
          description: Endorsement Type
          example: doc
      required:
        - creator_user_id
        - recipient_user_id
        - repo_id
        - source_context_url
        - type
    DbPullRequestContributor:
      type: object
      properties:
        author_login:
          type: string
          description: Pull request author username
          example: Th3nn3ss
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing pr last update
          example: 2022-08-28 22:04:29.000000
      required:
        - author_login
    DbUserList:
      type: object
      properties:
        id:
          type: string
          description: User List identifier
          example: uuid-v4
        user_id:
          type: integer
          description: User ID
          example: 237133
        name:
          type: string
          description: List Name
          example: JavaScript Developers
        is_public:
          type: boolean
          description: Flag indicating insight visibility
          example: false
        created_at:
          format: date-time
          type: string
          description: Timestamp representing insight creation
          example: 2022-10-19 13:24:51.000000
        updated_at:
          format: date-time
          type: string
          description: Timestamp representing insight last updated
          example: 2022-10-19 13:24:51.000000
        deleted_at:
          format: date-time
          type: string
          description: Timestamp representing insight deletion
          example: 2022-10-19 13:24:51.000000
      required:
        - id
        - user_id
        - name
        - is_public
    CreateUserListDto:
      type: object
      properties:
        name:
          type: string
          description: List Name
          example: My List
        is_public:
          type: boolean
          description: List Visibility
          example: false
        contributors:
          description: An array of contributor objects
          example:
            - id: 12345
              login: sauceduser
          type: array
          items:
            type: array
      required:
        - name
        - is_public
        - contributors
    DbUserListContributor:
      type: object
      properties:
        id:
          type: string
          description: User list contributor identifier
          example: uuid-v4
        user_id:
          type: integer
          description: User identifier
          example: 237133
        list_id:
          type: string
          description: List identifier
          example: uuid-v4
        username:
          type: string
          description: List user source username
          example: sauceduser
        created_at:
          format: date-time
          type: string
          description: Timestamp representing top repo first index
          example: 2016-10-19 13:24:51.000000
        login:
          type: string
          description: User list collaborator's login
          example: bdougie
      required:
        - id
        - user_id
        - list_id
    CollaboratorsDto:
      type: object
      properties:
        contributors:
          description: An array of contributor user IDs
          example:
            - 42211
            - 81233
          type: array
          items:
            type: integer
      required:
        - contributors
    DbTimezone:
      type: object
      properties:
        timezone:
          type: string
          description: Timezone string
          example: America/Los_Angeles
      required:
        - timezone
    DbUserListContributorStat:
      type: object
      properties:
        login:
          type: string
          description: User list collaborator's login
          example: bdougie
        commits:
          type: integer
          description: Number of commits associated with a user login
          example: 0
        prs_created:
          type: integer
          description: Number of PRs created associated with a user login
          example: 0
        prs_reviewed:
          type: integer
          description: Number of PRs reviewed by a user login
          example: 0
        issues_created:
          type: integer
          description: Number of issues created by a user login
          example: 0
        comments:
          type: integer
          description: Number of comments associated with a user login
          example: 0
      required:
        - commits
        - prs_created
        - prs_reviewed
        - issues_created
        - comments
    UserListContributorStatsTypeEnum:
      type: string
      enum:
        - all
        - active
        - new
        - alumni
    UserListContributorStatsOrderEnum:
      type: string
      enum:
        - commits
        - prs_created
        - total_contributions
    DbContributionStatTimeframe:
      type: object
      properties:
        time_start:
          type: string
          description: The ISO timestamp for the start of the time frame
          example: 2023-08-26T23:55:49.204Z
        time_end:
          type: string
          description: The ISO timestamp for the end of the time frame
          example: 2023-08-26T23:55:49.204Z
        commits:
          type: integer
          description: Number of commits associated with a user login
          example: 0
        prs_created:
          type: integer
          description: Number of PRs created associated with a user login
          example: 0
        prs_reviewed:
          type: integer
          description: Number of PRs reviewed by a user login
          example: 0
        issues_created:
          type: integer
          description: Number of issues created by a user login
          example: 0
        comments:
          type: integer
          description: Number of comments associated with a user login
          example: 0
      required:
        - time_start
        - time_end
        - commits
        - prs_created
        - prs_reviewed
        - issues_created
        - comments
    DbContributionsProjects:
      type: object
      properties:
        org_id:
          type: string
          description: The org name of the repo
          example: open-sauced
        project_id:
          type: string
          description: The project name of the repo
          example: api
        repo_id:
          type: integer
          description: The ID of the associated repo in the OpenSauced API context
          example: 0
        contributions:
          type: integer
          description: The number of contributions associated with a org/repo
          example: 0
      required:
        - org_id
        - project_id
        - repo_id
        - contributions
    DbContributorCategoryTimeframe:
      type: object
      properties:
        time_start:
          type: string
          description: The ISO timestamp for the start of the time frame
          example: 2023-08-26T23:55:49.204Z
        time_end:
          type: string
          description: The ISO timestamp for the end of the time frame
          example: 2023-08-26T23:55:49.204Z
        all:
          type: integer
          description: Number of all contributors (active, new, and alumni)
          example: 0
        active:
          type: integer
          description: Number of contributors who contributed in current time frame and
            previous time frame
          example: 0
        new:
          type: integer
          description: Number of contributors who are new to contributing (contributed in
            current time frame but not the previous time frame)
          example: 0
        alumni:
          type: integer
          description: Number of contributors who did not contribute in current time frame
            but did in the previous time frame
          example: 0
      required:
        - time_start
        - time_end
        - all
        - active
        - new
        - alumni
